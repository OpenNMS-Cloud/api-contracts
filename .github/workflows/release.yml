name: Release

on:
  workflow_call:
    inputs:
      working-directory:
        description: 'Root directory of the library with proto and POM files.'
        required: true
        type: string
    secrets:
      CLOUDSMITH_API_KEY:
        required: true

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure runner for committing
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - name: Get release version
        id: release-version
        uses: paulhatch/semantic-version@v5.0.2
        with:
          tag_prefix: "${{ inputs.working-directory }}/v"
          change_path: "${{ inputs.working-directory }}"

      - name: (Java) Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          server-id: cloudsmith-api-contracts
          server-username: github-actions
          server-password: CLOUDSMITH_API_KEY

      - name: (Java) Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: '~/.m2/repository'
          key: maven-deps-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles(format('{0}/**/pom.xml', inputs.working-directory)) }}

      - name: (Go) Setup golang
        uses: actions/setup-go@v4.0.1

      - name: (Go) Setup protoc
        uses: arduino/setup-protoc@v1.3.0

      - name: (Go) Setup protoc-gen-go
        run: |
          go install github.com/golang/protobuf/cmd/protoc-gen-go@v1.28
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.2

      - name: (Java) Build library & set new version
        run: |
          mvn -B install -Drevision=${{ steps.release-version.outputs.version }}
          mvn -B versions:set-property -Dproperty=revision -DnewVersion=${{ steps.release-version.outputs.version }} -DgenerateBackupPoms=false
        shell: bash
        working-directory: ${{ inputs.working-directory }}

      - name: (Go) Build library
        run: ./build.sh
        shell: bash
        working-directory: ${{ inputs.working-directory }}

      - name: Commit & tag release
        run: |
          git commit -am "[ci skip] Release ${{ inputs.working-directory }} v${{ steps.release-version.outputs.version }}"
          git tag ${{ steps.release-version.outputs.version_tag }}
        shell: bash
        working-directory: ${{ inputs.working-directory }}

      - name: Deploy to Cloudsmith
        if: false
        run: |
          mvn deploy:deploy
        shell: bash
        working-directory: ${{ inputs.working-directory }}
        env:
          CLOUDSMITH_API_KEY: ${{ secrets.CLOUDSMITH_API_KEY }}

      - name: Get next development version
        id: next-version
        uses: paulhatch/semantic-version@v5.0.2
        with:
          tag_prefix: "${{ inputs.working-directory }}/v"
          change_path: "${{ inputs.working-directory }}"

      - name: (Java) Set new development version
        run: |
          mvn -B versions:set-property -Dproperty=revision -DnewVersion=${{ steps.release-version.outputs.version }}-SNAPSHOT -DgenerateBackupPoms=false
          git commit -am "[ci skip] Prepare for next ${{ inputs.working-directory }} development iteration"
        shell: bash
        working-directory: ${{ inputs.working-directory }}

      - name: show git log
        run: |
          git tag --list
          git log
        shell: bash
        working-directory: ${{ inputs.working-directory }}

      - name: Push tags and commits
        if: false
        run: |
          git push
          git push origin ${{ steps.release-version.outputs.version_tag }}
        shell: bash
        working-directory: ${{ inputs.working-directory }}

      - name: Upload library artifacts
        uses: actions/upload-artifact@v3
        with:
          name: 'jar-files'
          path: ${{ format('{0}/**/target/*.jar', inputs.working-directory) }}
