// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: querier/querier.proto

package v1

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Direction int32

const (
	Direction_INGRESS Direction = 0
	Direction_EGRESS  Direction = 1
	Direction_UNKNOWN Direction = 255
)

// Enum value maps for Direction.
var (
	Direction_name = map[int32]string{
		0:   "INGRESS",
		1:   "EGRESS",
		255: "UNKNOWN",
	}
	Direction_value = map[string]int32{
		"INGRESS": 0,
		"EGRESS":  1,
		"UNKNOWN": 255,
	}
)

func (x Direction) Enum() *Direction {
	p := new(Direction)
	*p = x
	return p
}

func (x Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_querier_querier_proto_enumTypes[0].Descriptor()
}

func (Direction) Type() protoreflect.EnumType {
	return &file_querier_querier_proto_enumTypes[0]
}

func (x Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Direction.Descriptor instead.
func (Direction) EnumDescriptor() ([]byte, []int) {
	return file_querier_querier_proto_rawDescGZIP(), []int{0}
}

type Exporter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForeignSource string   `protobuf:"bytes,1,opt,name=foreign_source,json=foreignSource,proto3" json:"foreign_source,omitempty"`
	ForeignId     string   `protobuf:"bytes,2,opt,name=foreign_id,json=foreignId,proto3" json:"foreign_id,omitempty"`
	NodeId        uint32   `protobuf:"varint,3,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Categories    []string `protobuf:"bytes,4,rep,name=categories,proto3" json:"categories,omitempty"`
	InterfaceId   int32    `protobuf:"varint,5,opt,name=interface_id,json=interfaceId,proto3" json:"interface_id,omitempty"`
}

func (x *Exporter) Reset() {
	*x = Exporter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_querier_querier_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Exporter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Exporter) ProtoMessage() {}

func (x *Exporter) ProtoReflect() protoreflect.Message {
	mi := &file_querier_querier_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Exporter.ProtoReflect.Descriptor instead.
func (*Exporter) Descriptor() ([]byte, []int) {
	return file_querier_querier_proto_rawDescGZIP(), []int{0}
}

func (x *Exporter) GetForeignSource() string {
	if x != nil {
		return x.ForeignSource
	}
	return ""
}

func (x *Exporter) GetForeignId() string {
	if x != nil {
		return x.ForeignId
	}
	return ""
}

func (x *Exporter) GetNodeId() uint32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *Exporter) GetCategories() []string {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *Exporter) GetInterfaceId() int32 {
	if x != nil {
		return x.InterfaceId
	}
	return 0
}

type TimeRangeFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime *timestamp.Timestamp `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   *timestamp.Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *TimeRangeFilter) Reset() {
	*x = TimeRangeFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_querier_querier_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeRangeFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeRangeFilter) ProtoMessage() {}

func (x *TimeRangeFilter) ProtoReflect() protoreflect.Message {
	mi := &file_querier_querier_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeRangeFilter.ProtoReflect.Descriptor instead.
func (*TimeRangeFilter) Descriptor() ([]byte, []int) {
	return file_querier_querier_proto_rawDescGZIP(), []int{1}
}

func (x *TimeRangeFilter) GetStartTime() *timestamp.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *TimeRangeFilter) GetEndTime() *timestamp.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

type ApplicationFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Application string `protobuf:"bytes,1,opt,name=application,proto3" json:"application,omitempty"`
}

func (x *ApplicationFilter) Reset() {
	*x = ApplicationFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_querier_querier_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationFilter) ProtoMessage() {}

func (x *ApplicationFilter) ProtoReflect() protoreflect.Message {
	mi := &file_querier_querier_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationFilter.ProtoReflect.Descriptor instead.
func (*ApplicationFilter) Descriptor() ([]byte, []int) {
	return file_querier_querier_proto_rawDescGZIP(), []int{2}
}

func (x *ApplicationFilter) GetApplication() string {
	if x != nil {
		return x.Application
	}
	return ""
}

type ExporterFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exporter *Exporter `protobuf:"bytes,1,opt,name=exporter,proto3" json:"exporter,omitempty"`
}

func (x *ExporterFilter) Reset() {
	*x = ExporterFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_querier_querier_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExporterFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExporterFilter) ProtoMessage() {}

func (x *ExporterFilter) ProtoReflect() protoreflect.Message {
	mi := &file_querier_querier_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExporterFilter.ProtoReflect.Descriptor instead.
func (*ExporterFilter) Descriptor() ([]byte, []int) {
	return file_querier_querier_proto_rawDescGZIP(), []int{3}
}

func (x *ExporterFilter) GetExporter() *Exporter {
	if x != nil {
		return x.Exporter
	}
	return nil
}

type Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Filter:
	//
	//	*Filter_TimeRange
	//	*Filter_Application
	//	*Filter_Exporter
	Filter isFilter_Filter `protobuf_oneof:"filter"`
}

func (x *Filter) Reset() {
	*x = Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_querier_querier_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_querier_querier_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_querier_querier_proto_rawDescGZIP(), []int{4}
}

func (m *Filter) GetFilter() isFilter_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *Filter) GetTimeRange() *TimeRangeFilter {
	if x, ok := x.GetFilter().(*Filter_TimeRange); ok {
		return x.TimeRange
	}
	return nil
}

func (x *Filter) GetApplication() *ApplicationFilter {
	if x, ok := x.GetFilter().(*Filter_Application); ok {
		return x.Application
	}
	return nil
}

func (x *Filter) GetExporter() *ExporterFilter {
	if x, ok := x.GetFilter().(*Filter_Exporter); ok {
		return x.Exporter
	}
	return nil
}

type isFilter_Filter interface {
	isFilter_Filter()
}

type Filter_TimeRange struct {
	TimeRange *TimeRangeFilter `protobuf:"bytes,1,opt,name=time_range,json=timeRange,proto3,oneof"`
}

type Filter_Application struct {
	Application *ApplicationFilter `protobuf:"bytes,6,opt,name=application,proto3,oneof"`
}

type Filter_Exporter struct {
	Exporter *ExporterFilter `protobuf:"bytes,7,opt,name=exporter,proto3,oneof"`
}

func (*Filter_TimeRange) isFilter_Filter() {}

func (*Filter_Application) isFilter_Filter() {}

func (*Filter_Exporter) isFilter_Filter() {}

type ListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TenantId       string    `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	MatchingPrefix string    `protobuf:"bytes,2,opt,name=matching_prefix,json=matchingPrefix,proto3" json:"matching_prefix,omitempty"`
	Limit          int64     `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Filters        []*Filter `protobuf:"bytes,4,rep,name=filters,proto3" json:"filters,omitempty"`
}

func (x *ListRequest) Reset() {
	*x = ListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_querier_querier_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRequest) ProtoMessage() {}

func (x *ListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_querier_querier_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRequest.ProtoReflect.Descriptor instead.
func (*ListRequest) Descriptor() ([]byte, []int) {
	return file_querier_querier_proto_rawDescGZIP(), []int{5}
}

func (x *ListRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *ListRequest) GetMatchingPrefix() string {
	if x != nil {
		return x.MatchingPrefix
	}
	return ""
}

func (x *ListRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListRequest) GetFilters() []*Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

type List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Elements []string `protobuf:"bytes,1,rep,name=elements,proto3" json:"elements,omitempty"`
}

func (x *List) Reset() {
	*x = List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_querier_querier_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*List) ProtoMessage() {}

func (x *List) ProtoReflect() protoreflect.Message {
	mi := &file_querier_querier_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use List.ProtoReflect.Descriptor instead.
func (*List) Descriptor() ([]byte, []int) {
	return file_querier_querier_proto_rawDescGZIP(), []int{6}
}

func (x *List) GetElements() []string {
	if x != nil {
		return x.Elements
	}
	return nil
}

type ApplicationSummariesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TenantId     string    `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	Applications []string  `protobuf:"bytes,2,rep,name=applications,proto3" json:"applications,omitempty"` // Explicit list of application (precedence over count)
	Count        int64     `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`              // For Top-N summaries (ignored when provided an explicit list of applications)
	IncludeOther bool      `protobuf:"varint,4,opt,name=include_other,json=includeOther,proto3" json:"include_other,omitempty"`
	Filters      []*Filter `protobuf:"bytes,5,rep,name=filters,proto3" json:"filters,omitempty"`
}

func (x *ApplicationSummariesRequest) Reset() {
	*x = ApplicationSummariesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_querier_querier_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationSummariesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationSummariesRequest) ProtoMessage() {}

func (x *ApplicationSummariesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_querier_querier_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationSummariesRequest.ProtoReflect.Descriptor instead.
func (*ApplicationSummariesRequest) Descriptor() ([]byte, []int) {
	return file_querier_querier_proto_rawDescGZIP(), []int{7}
}

func (x *ApplicationSummariesRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *ApplicationSummariesRequest) GetApplications() []string {
	if x != nil {
		return x.Applications
	}
	return nil
}

func (x *ApplicationSummariesRequest) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ApplicationSummariesRequest) GetIncludeOther() bool {
	if x != nil {
		return x.IncludeOther
	}
	return false
}

func (x *ApplicationSummariesRequest) GetFilters() []*Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

type TrafficSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BytesIn                int64 `protobuf:"varint,1,opt,name=bytes_in,json=bytesIn,proto3" json:"bytes_in,omitempty"`
	BytesOut               int64 `protobuf:"varint,2,opt,name=bytes_out,json=bytesOut,proto3" json:"bytes_out,omitempty"`
	CongestionEncountered  bool  `protobuf:"varint,3,opt,name=congestion_encountered,json=congestionEncountered,proto3" json:"congestion_encountered,omitempty"`
	NonEcnCapableTransport bool  `protobuf:"varint,4,opt,name=non_ecn_capable_transport,json=nonEcnCapableTransport,proto3" json:"non_ecn_capable_transport,omitempty"`
	// Types that are assignable to Type:
	//
	//	*TrafficSummary_Application
	Type isTrafficSummary_Type `protobuf_oneof:"type"`
}

func (x *TrafficSummary) Reset() {
	*x = TrafficSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_querier_querier_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrafficSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrafficSummary) ProtoMessage() {}

func (x *TrafficSummary) ProtoReflect() protoreflect.Message {
	mi := &file_querier_querier_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrafficSummary.ProtoReflect.Descriptor instead.
func (*TrafficSummary) Descriptor() ([]byte, []int) {
	return file_querier_querier_proto_rawDescGZIP(), []int{8}
}

func (x *TrafficSummary) GetBytesIn() int64 {
	if x != nil {
		return x.BytesIn
	}
	return 0
}

func (x *TrafficSummary) GetBytesOut() int64 {
	if x != nil {
		return x.BytesOut
	}
	return 0
}

func (x *TrafficSummary) GetCongestionEncountered() bool {
	if x != nil {
		return x.CongestionEncountered
	}
	return false
}

func (x *TrafficSummary) GetNonEcnCapableTransport() bool {
	if x != nil {
		return x.NonEcnCapableTransport
	}
	return false
}

func (m *TrafficSummary) GetType() isTrafficSummary_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *TrafficSummary) GetApplication() string {
	if x, ok := x.GetType().(*TrafficSummary_Application); ok {
		return x.Application
	}
	return ""
}

type isTrafficSummary_Type interface {
	isTrafficSummary_Type()
}

type TrafficSummary_Application struct {
	Application string `protobuf:"bytes,5,opt,name=application,proto3,oneof"`
}

func (*TrafficSummary_Application) isTrafficSummary_Type() {}

type Summaries struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Summaries []*TrafficSummary `protobuf:"bytes,1,rep,name=summaries,proto3" json:"summaries,omitempty"`
}

func (x *Summaries) Reset() {
	*x = Summaries{}
	if protoimpl.UnsafeEnabled {
		mi := &file_querier_querier_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Summaries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Summaries) ProtoMessage() {}

func (x *Summaries) ProtoReflect() protoreflect.Message {
	mi := &file_querier_querier_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Summaries.ProtoReflect.Descriptor instead.
func (*Summaries) Descriptor() ([]byte, []int) {
	return file_querier_querier_proto_rawDescGZIP(), []int{9}
}

func (x *Summaries) GetSummaries() []*TrafficSummary {
	if x != nil {
		return x.Summaries
	}
	return nil
}

type ApplicationSeriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TenantId     string    `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	Applications []string  `protobuf:"bytes,2,rep,name=applications,proto3" json:"applications,omitempty"` // Explicit list of application (precedence over count)
	Count        int64     `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`              // For Top-N summaries (ignored when provided an explicit list of applications)
	Step         int64     `protobuf:"varint,4,opt,name=step,proto3" json:"step,omitempty"`
	IncludeOther bool      `protobuf:"varint,5,opt,name=include_other,json=includeOther,proto3" json:"include_other,omitempty"`
	Filters      []*Filter `protobuf:"bytes,6,rep,name=filters,proto3" json:"filters,omitempty"`
}

func (x *ApplicationSeriesRequest) Reset() {
	*x = ApplicationSeriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_querier_querier_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationSeriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationSeriesRequest) ProtoMessage() {}

func (x *ApplicationSeriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_querier_querier_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationSeriesRequest.ProtoReflect.Descriptor instead.
func (*ApplicationSeriesRequest) Descriptor() ([]byte, []int) {
	return file_querier_querier_proto_rawDescGZIP(), []int{10}
}

func (x *ApplicationSeriesRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *ApplicationSeriesRequest) GetApplications() []string {
	if x != nil {
		return x.Applications
	}
	return nil
}

func (x *ApplicationSeriesRequest) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ApplicationSeriesRequest) GetStep() int64 {
	if x != nil {
		return x.Step
	}
	return 0
}

func (x *ApplicationSeriesRequest) GetIncludeOther() bool {
	if x != nil {
		return x.IncludeOther
	}
	return false
}

func (x *ApplicationSeriesRequest) GetFilters() []*Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

type FlowingPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Value     float64              `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	Direction *Direction           `protobuf:"varint,3,opt,name=direction,proto3,enum=org.opennms.apicontracts.flows.querier.Direction,oneof" json:"direction,omitempty"`
	// Types that are assignable to Type:
	//
	//	*FlowingPoint_Application
	Type isFlowingPoint_Type `protobuf_oneof:"type"`
}

func (x *FlowingPoint) Reset() {
	*x = FlowingPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_querier_querier_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowingPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowingPoint) ProtoMessage() {}

func (x *FlowingPoint) ProtoReflect() protoreflect.Message {
	mi := &file_querier_querier_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowingPoint.ProtoReflect.Descriptor instead.
func (*FlowingPoint) Descriptor() ([]byte, []int) {
	return file_querier_querier_proto_rawDescGZIP(), []int{11}
}

func (x *FlowingPoint) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *FlowingPoint) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *FlowingPoint) GetDirection() Direction {
	if x != nil && x.Direction != nil {
		return *x.Direction
	}
	return Direction_INGRESS
}

func (m *FlowingPoint) GetType() isFlowingPoint_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *FlowingPoint) GetApplication() string {
	if x, ok := x.GetType().(*FlowingPoint_Application); ok {
		return x.Application
	}
	return ""
}

type isFlowingPoint_Type interface {
	isFlowingPoint_Type()
}

type FlowingPoint_Application struct {
	Application string `protobuf:"bytes,4,opt,name=application,proto3,oneof"`
}

func (*FlowingPoint_Application) isFlowingPoint_Type() {}

type Series struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Point []*FlowingPoint `protobuf:"bytes,1,rep,name=point,proto3" json:"point,omitempty"`
}

func (x *Series) Reset() {
	*x = Series{}
	if protoimpl.UnsafeEnabled {
		mi := &file_querier_querier_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Series) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Series) ProtoMessage() {}

func (x *Series) ProtoReflect() protoreflect.Message {
	mi := &file_querier_querier_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Series.ProtoReflect.Descriptor instead.
func (*Series) Descriptor() ([]byte, []int) {
	return file_querier_querier_proto_rawDescGZIP(), []int{12}
}

func (x *Series) GetPoint() []*FlowingPoint {
	if x != nil {
		return x.Point
	}
	return nil
}

var File_querier_querier_proto protoreflect.FileDescriptor

var file_querier_querier_proto_rawDesc = []byte{
	0x0a, 0x15, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x72, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x26, 0x6f, 0x72, 0x67, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x6e, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x73, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x72, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xac, 0x01, 0x0a, 0x08, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x12, 0x25, 0x0a,
	0x0e, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67,
	0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22,
	0x83, 0x01, 0x0a, 0x0f, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x35, 0x0a, 0x11, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5e, 0x0a, 0x0e,
	0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x4c,
	0x0a, 0x08, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x6d, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x66, 0x6c, 0x6f, 0x77,
	0x73, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x72, 0x52, 0x08, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x22, 0xa1, 0x02, 0x0a,
	0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x58, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e, 0x71, 0x75, 0x65,
	0x72, 0x69, 0x65, 0x72, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x12, 0x5d, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x6e, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x73, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x72, 0x2e,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x48, 0x00, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x54, 0x0a, 0x08, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x6d, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x66, 0x6c,
	0x6f, 0x77, 0x73, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x08, 0x65, 0x78,
	0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x22, 0xb3, 0x01, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a,
	0x0f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x48, 0x0a, 0x07,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x6f, 0x72, 0x67, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e, 0x71,
	0x75, 0x65, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x22, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xe3, 0x01, 0x0a, 0x1b, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6f, 0x74, 0x68,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x12, 0x48, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x6e, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x73, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x72,
	0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x22, 0xe6, 0x01, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x79, 0x74, 0x65, 0x73, 0x49, 0x6e, 0x12, 0x1b,
	0x0a, 0x09, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x62, 0x79, 0x74, 0x65, 0x73, 0x4f, 0x75, 0x74, 0x12, 0x35, 0x0a, 0x16, 0x63,
	0x6f, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x63, 0x6f, 0x6e,
	0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x64, 0x12, 0x39, 0x0a, 0x19, 0x6e, 0x6f, 0x6e, 0x5f, 0x65, 0x63, 0x6e, 0x5f, 0x63, 0x61,
	0x70, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x6e, 0x6f, 0x6e, 0x45, 0x63, 0x6e, 0x43, 0x61, 0x70,
	0x61, 0x62, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x22, 0x0a,
	0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x61, 0x0a, 0x09, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x12, 0x54, 0x0a, 0x09, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6f, 0x72, 0x67, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x73, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x69,
	0x65, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x52, 0x09, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x22, 0xf4, 0x01, 0x0a,
	0x18, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x73, 0x74, 0x65, 0x70, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f,
	0x6f, 0x74, 0x68, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x12, 0x48, 0x0a, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6f, 0x72, 0x67,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e, 0x71, 0x75, 0x65, 0x72,
	0x69, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x22, 0xee, 0x01, 0x0a, 0x0c, 0x46, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x54, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x6e, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x73, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x72,
	0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x01, 0x52, 0x09, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0b, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x06,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x54, 0x0a, 0x06, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x4a,
	0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e,
	0x6f, 0x72, 0x67, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e, 0x71,
	0x75, 0x65, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2a, 0x32, 0x0a, 0x09, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x47, 0x52, 0x45,
	0x53, 0x53, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x45, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x01,
	0x12, 0x0c, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0xff, 0x01, 0x32, 0x8d,
	0x01, 0x0a, 0x0f, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x7a, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x12, 0x33, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e, 0x71, 0x75, 0x65,
	0x72, 0x69, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2c, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x6d, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x66, 0x6c, 0x6f, 0x77,
	0x73, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x32, 0xaa,
	0x03, 0x0a, 0x13, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x74, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x33, 0x2e, 0x6f, 0x72, 0x67, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x73, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x69,
	0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c,
	0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e,
	0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x91, 0x01, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x12, 0x43, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x6e, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x73, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65,
	0x72, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e,
	0x6f, 0x72, 0x67, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e, 0x71,
	0x75, 0x65, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73,
	0x12, 0x88, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x40, 0x2e, 0x6f, 0x72, 0x67, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x73, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x69,
	0x65, 0x72, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e, 0x71, 0x75, 0x65,
	0x72, 0x69, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x42, 0x49, 0x5a, 0x47, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4f, 0x70, 0x65, 0x6e, 0x4e, 0x4d,
	0x53, 0x2d, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2d, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x6c, 0x6f, 0x77,
	0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2f, 0x71, 0x75, 0x65, 0x72,
	0x69, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_querier_querier_proto_rawDescOnce sync.Once
	file_querier_querier_proto_rawDescData = file_querier_querier_proto_rawDesc
)

func file_querier_querier_proto_rawDescGZIP() []byte {
	file_querier_querier_proto_rawDescOnce.Do(func() {
		file_querier_querier_proto_rawDescData = protoimpl.X.CompressGZIP(file_querier_querier_proto_rawDescData)
	})
	return file_querier_querier_proto_rawDescData
}

var file_querier_querier_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_querier_querier_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_querier_querier_proto_goTypes = []interface{}{
	(Direction)(0),                      // 0: org.opennms.apicontracts.flows.querier.Direction
	(*Exporter)(nil),                    // 1: org.opennms.apicontracts.flows.querier.Exporter
	(*TimeRangeFilter)(nil),             // 2: org.opennms.apicontracts.flows.querier.TimeRangeFilter
	(*ApplicationFilter)(nil),           // 3: org.opennms.apicontracts.flows.querier.ApplicationFilter
	(*ExporterFilter)(nil),              // 4: org.opennms.apicontracts.flows.querier.ExporterFilter
	(*Filter)(nil),                      // 5: org.opennms.apicontracts.flows.querier.Filter
	(*ListRequest)(nil),                 // 6: org.opennms.apicontracts.flows.querier.ListRequest
	(*List)(nil),                        // 7: org.opennms.apicontracts.flows.querier.List
	(*ApplicationSummariesRequest)(nil), // 8: org.opennms.apicontracts.flows.querier.ApplicationSummariesRequest
	(*TrafficSummary)(nil),              // 9: org.opennms.apicontracts.flows.querier.TrafficSummary
	(*Summaries)(nil),                   // 10: org.opennms.apicontracts.flows.querier.Summaries
	(*ApplicationSeriesRequest)(nil),    // 11: org.opennms.apicontracts.flows.querier.ApplicationSeriesRequest
	(*FlowingPoint)(nil),                // 12: org.opennms.apicontracts.flows.querier.FlowingPoint
	(*Series)(nil),                      // 13: org.opennms.apicontracts.flows.querier.Series
	(*timestamp.Timestamp)(nil),         // 14: google.protobuf.Timestamp
}
var file_querier_querier_proto_depIdxs = []int32{
	14, // 0: org.opennms.apicontracts.flows.querier.TimeRangeFilter.start_time:type_name -> google.protobuf.Timestamp
	14, // 1: org.opennms.apicontracts.flows.querier.TimeRangeFilter.end_time:type_name -> google.protobuf.Timestamp
	1,  // 2: org.opennms.apicontracts.flows.querier.ExporterFilter.exporter:type_name -> org.opennms.apicontracts.flows.querier.Exporter
	2,  // 3: org.opennms.apicontracts.flows.querier.Filter.time_range:type_name -> org.opennms.apicontracts.flows.querier.TimeRangeFilter
	3,  // 4: org.opennms.apicontracts.flows.querier.Filter.application:type_name -> org.opennms.apicontracts.flows.querier.ApplicationFilter
	4,  // 5: org.opennms.apicontracts.flows.querier.Filter.exporter:type_name -> org.opennms.apicontracts.flows.querier.ExporterFilter
	5,  // 6: org.opennms.apicontracts.flows.querier.ListRequest.filters:type_name -> org.opennms.apicontracts.flows.querier.Filter
	5,  // 7: org.opennms.apicontracts.flows.querier.ApplicationSummariesRequest.filters:type_name -> org.opennms.apicontracts.flows.querier.Filter
	9,  // 8: org.opennms.apicontracts.flows.querier.Summaries.summaries:type_name -> org.opennms.apicontracts.flows.querier.TrafficSummary
	5,  // 9: org.opennms.apicontracts.flows.querier.ApplicationSeriesRequest.filters:type_name -> org.opennms.apicontracts.flows.querier.Filter
	14, // 10: org.opennms.apicontracts.flows.querier.FlowingPoint.timestamp:type_name -> google.protobuf.Timestamp
	0,  // 11: org.opennms.apicontracts.flows.querier.FlowingPoint.direction:type_name -> org.opennms.apicontracts.flows.querier.Direction
	12, // 12: org.opennms.apicontracts.flows.querier.Series.point:type_name -> org.opennms.apicontracts.flows.querier.FlowingPoint
	6,  // 13: org.opennms.apicontracts.flows.querier.ExporterService.GetExporterInterfaces:input_type -> org.opennms.apicontracts.flows.querier.ListRequest
	6,  // 14: org.opennms.apicontracts.flows.querier.ApplicationsService.GetApplications:input_type -> org.opennms.apicontracts.flows.querier.ListRequest
	8,  // 15: org.opennms.apicontracts.flows.querier.ApplicationsService.GetApplicationSummaries:input_type -> org.opennms.apicontracts.flows.querier.ApplicationSummariesRequest
	11, // 16: org.opennms.apicontracts.flows.querier.ApplicationsService.GetApplicationSeries:input_type -> org.opennms.apicontracts.flows.querier.ApplicationSeriesRequest
	7,  // 17: org.opennms.apicontracts.flows.querier.ExporterService.GetExporterInterfaces:output_type -> org.opennms.apicontracts.flows.querier.List
	7,  // 18: org.opennms.apicontracts.flows.querier.ApplicationsService.GetApplications:output_type -> org.opennms.apicontracts.flows.querier.List
	10, // 19: org.opennms.apicontracts.flows.querier.ApplicationsService.GetApplicationSummaries:output_type -> org.opennms.apicontracts.flows.querier.Summaries
	13, // 20: org.opennms.apicontracts.flows.querier.ApplicationsService.GetApplicationSeries:output_type -> org.opennms.apicontracts.flows.querier.Series
	17, // [17:21] is the sub-list for method output_type
	13, // [13:17] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_querier_querier_proto_init() }
func file_querier_querier_proto_init() {
	if File_querier_querier_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_querier_querier_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Exporter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_querier_querier_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeRangeFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_querier_querier_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_querier_querier_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExporterFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_querier_querier_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_querier_querier_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_querier_querier_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_querier_querier_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationSummariesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_querier_querier_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrafficSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_querier_querier_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Summaries); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_querier_querier_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationSeriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_querier_querier_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowingPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_querier_querier_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Series); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_querier_querier_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*Filter_TimeRange)(nil),
		(*Filter_Application)(nil),
		(*Filter_Exporter)(nil),
	}
	file_querier_querier_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*TrafficSummary_Application)(nil),
	}
	file_querier_querier_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*FlowingPoint_Application)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_querier_querier_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_querier_querier_proto_goTypes,
		DependencyIndexes: file_querier_querier_proto_depIdxs,
		EnumInfos:         file_querier_querier_proto_enumTypes,
		MessageInfos:      file_querier_querier_proto_msgTypes,
	}.Build()
	File_querier_querier_proto = out.File
	file_querier_querier_proto_rawDesc = nil
	file_querier_querier_proto_goTypes = nil
	file_querier_querier_proto_depIdxs = nil
}
