name: Release

on:
  workflow_call:
    inputs:
      working-directory:
        description: 'Root directory of the library with proto and POM files.'
        required: true
        type: string
    secrets:
      CLOUDSMITH_API_KEY:
        required: true

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure runner for committing
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - name: Get release version
        id: release-version
        uses: paulhatch/semantic-version@v5.0.2
        with:
          tag_prefix: "${{ inputs.working-directory }}/v"
          change_path: "${{ inputs.working-directory }}"

      - name: Set up Java
        uses: ./.github/actions/java-setup
        with:
          working-directory: ${{ inputs.working-directory }}

      - name: Set up Go
        uses: ./.github/actions/go-setup

      - name: (Java) Prepare release
        run: |
          mvn -B release:prepare -DreleaseVersion=${{ steps.release-version.outputs.version }} -DdryRun=true
        shell: bash
        working-directory: ${{ inputs.working-directory }}

      - name: (Go) Prepare release
        run: ./build.sh
        shell: bash
        working-directory: ${{ inputs.working-directory }}

      - name: Commit & tag release
        run: |
          git commit -am "[ci skip] Release ${{ inputs.working-directory }} v${{ steps.release-version.outputs.version }}"
          git tag ${{ steps.release-version.outputs.version_tag }}
        shell: bash
        working-directory: ${{ inputs.working-directory }}

      - name: (Java) Perform release
        run: |
          mvn -B release:perform -DdryRun=true -DlocalCheckout=true
        shell: bash
        working-directory: ${{ inputs.working-directory }}

      - name: show git log
        run: |
          git status
          git tag --list
          git log
          git checkout -b workflow-run-${{ github.run_id }}-${{ github.run_attempt }}
          git push -f origin workflow-run-${{ github.run_id }}-${{ github.run_attempt }}
        shell: bash
        working-directory: ${{ inputs.working-directory }}

      - name: Push tags and commits
        if: false
        run: |
          git push
          git push origin ${{ steps.release-version.outputs.version_tag }}
        shell: bash
        working-directory: ${{ inputs.working-directory }}

      - name: Upload library artifacts
        uses: actions/upload-artifact@v3
        with:
          name: 'jar-files'
          path: ${{ format('{0}/**/target/*.jar', inputs.working-directory) }}
